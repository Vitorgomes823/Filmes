@using Newtonsoft.Json.Linq
@model JToken

<!DOCTYPE html>
<html>
<head>
    <title>Resultados</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(270deg, #ff6a00, #ee0979);
            background-size: 400% 400%;
            animation: gradientBG 10s ease infinite;
            color: white;
        }

        .movie-card {
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 20px;
            background-color: rgba(255, 255, 255, 0.1); /* Card translúcido */
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);
            text-align: center;
            transition: transform 0.3s ease, background-color 0.3s ease; /* Transição suave */
        }

            .movie-card:hover {
                transform: scale(1.1); /* Ampliação do card */
                background-color: rgba(255, 255, 255, 0.2); /* Destaque no hover */
            }

        .movie-poster {
            border-radius: 10px;
            width: 200px;
            height: 300px; /* Padronizar altura das imagens */
            object-fit: cover; /* Garante o ajuste da imagem no espaço */
            transition: transform 0.3s ease; /* Animação suave */
        }

        .movie-card:hover .movie-poster {
            transform: scale(1.00); /* Ampliar o pôster quando o card é ampliado */
        }

        .movie-info {
            display: none; /* Esconde título, data e sinopse inicialmente */
            margin-top: 20px; /* Espaçamento entre imagem e texto */
        }

            .movie-info.show {
                display: block; /* Exibe os detalhes ao clicar */
            }

        .spacer {
            height: 100px; /* Espaçamento ajustável */
        }

        .custom-button {
            background: linear-gradient(90deg, #ee0979, #ff6a00);
            color: white;
            border: none;
            border-radius: 25px;
            padding: 12px 25px;
            font-size: 16px;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 1px;
            cursor: pointer;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
        }

            .custom-button:hover {
                background: linear-gradient(90deg, #ff6a00, #ee0979); /* Muda a direção do gradiente no hover */
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3); /* Sombra mais intensa */
                transform: scale(1.1); /* Ampliação do botão */
            }

            .custom-button:active {
                background: #ff5722; /* Cor sólida ao clicar */
                transform: scale(0.95); /* Efeito de "pressionar" */
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            }

    </style>
</head>
<body>
    <div class="container mt-5">
        <!-- Título -->
        <div class="text-center">
            <h1 class="custom-header">🍿 Resultados da Busca</h1>
            <p class="text">Clique nos pôsteres para ver mais detalhes!</p>
        </div>

        <!-- Listagem dos Filmes -->
        <div class="row">
            @foreach (var movie in Model)
            {
                var posterPath = movie["poster_path"]?.ToString(); // Caminho da imagem
                var imageUrl = !string.IsNullOrWhiteSpace(posterPath)
                ? $"https://image.tmdb.org/t/p/w500/{posterPath}" // URL da imagem se disponível
                : "https://picsum.photos/200/300"; // Placeholder se não houver pôster

                <div class="col-md-4 mb-4">
                    <div class="movie-card" onclick="toggleDetails(this)">
                        <img src="@imageUrl" alt="Poster de @movie["title"]" class="movie-poster" />
                        <div class="movie-info">
                            <h3>@movie["title"]</h3>
                            <p><strong>Lançamento:</strong> @movie["release_date"]</p>
                            <p><strong>Streaming:</strong> @movie["streamingPlatforms"]</p>
                            <p><strong>Sinopse:</strong> @movie["overview"]</p>
                            <button class="custom-button" onclick="fetchTrailer('@movie["id"]')">Ver trailer</button>
                        </div>
                    </div>
                </div>

                <!-- Modal para exibir o trailer -->
                <div class="modal" id="trailerModal" tabindex="-1">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Trailer</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <iframe id="trailerFrame" width="100%" height="400px" frameborder="0" allowfullscreen></iframe>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>

    <div class="spacer"></div>

    <script>
        function toggleDetails(card) {
            const info = card.querySelector('.movie-info'); // Encontra o texto do card
            const isVisible = info.classList.contains('show'); // Verifica se os detalhes estão visíveis

            // Alternar a exibição do texto
            info.classList.toggle('show', !isVisible);

            // Alterar o estado do card
            card.classList.toggle('active', !isVisible);
        }

                        async function fetchTrailer(movieId) {
            try {
                const response = await fetch(`/api/getTrailer/${movieId}`);
                const data = await response.json();

                if (data.trailerUrl) {
                    const trailerFrame = document.getElementById('trailerFrame');
                    trailerFrame.src = data.trailerUrl; // Adiciona o link do trailer ao iframe
                    const modal = new bootstrap.Modal(document.getElementById('trailerModal'));
                    modal.show();
                } else {
                    alert('Trailer não encontrado!');
                }
            } catch (error) {
                console.error('Erro ao buscar o trailer:', error);
                alert('Ocorreu um erro ao buscar o trailer.');
            }
        }
            document.getElementById('trailerModal').addEventListener('hidden.bs.modal', function () {
            const trailerFrame = document.getElementById('trailerFrame');
            trailerFrame.src = ''; // Limpa o src para parar o vídeo
        });

    </script>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>